---
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
AWSTemplateFormatVersion: "2010-09-09"

Description: 'AWS Cloudformation template for Elastic Load balancing'

Metadata:
  License: Apache-2.0

Parameters:
  EnvironmentName:
    Description: An Environment name that will prefix the resources
    Type: String
    AllowedValues: [DEV, TEST, PROD, SUPP]
    ConstraintDescription: must be DEV, TEST, PROD or SUPP

  MyVPC:
    Description: VPC to Operate in
    Type: AWS::EC2::VPC::Id

  SubnetID:
    Description: Add public subnet for ELB
    Type: "List<AWS::EC2::Subnet::Id>"

  TargetSubnetCIDR:
    Description: Please enter the IP range (CIDR notation) for the public subnet.
    Type: String
    MinLength: 9
    MaxLength: 18
    Default: 10.192.10.0/24
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.

#Mappings:

#Conditions:

Resources:

  ElasticLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Subnets: !Select [ 0, !Ref SubnetIDS ]
      Tags:
        - Key: Name
          Value: !Ref EnvironmentName

  ELBListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref ElasticLoadBalancer
      Port: "80"
      Protocol: "HTTP"
      DefaultActions:
      - Type: "forward",
        TargetGroupArn: !Ref ALBTargetGroup

  ALBTargetGroup:
   Type: "AWS::ElasticLoadBalancingV2::TargetGroup"
   Properties:
    HealthCheckIntervalSeconds: 30
    HealthCheckTimeoutSeconds: 5
    HealthyThresholdCount: 3
    Port: 80
    Protocol: HTTP
    UnhealthyThresholdCount: 5
    VpcId: !Ref MyVPC
    Targets:
     - Id: !Ref TargetSubnetCIDR
       Port: 80
    TargetGroupAttributes:
     - Key: "stickiness.enabled"
       Value: true
     - Key: "stickiness.type"
       Value: lb_cookie
     - Key: "stickiness.lb_cookie.duration_seconds"
       Value: 180

Outputs:
  MyElasticLoadBalancer:
    Description: A reference to the created ELB
    Value: !Ref ElasticLoadBalancer
    Export:
      Name: !Sub "${AWS::StackName}-${EnvironmentName}-ElasticLoadBalancer"
